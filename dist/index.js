(()=>{const a="/audiogata",e="/nowplaying.json",s="/plugins.json",t="/playlists.json";let o;const i=(a,e)=>{o.setAccessToken(a),o.setRefreshToken(e),application.onNowPlayingTracksAdded=l,application.onNowPlayingTracksChanged=l,application.onNowPlayingTracksRemoved=l,application.onNowPlayingTracksSet=l},n=async(e,s)=>{const t=new Dropbox.Dropbox({auth:o});await t.filesUpload({path:a+e,mute:!0,mode:{".tag":"overwrite"},contents:JSON.stringify(s)})},c=async e=>{const s=new Dropbox.Dropbox({auth:o}),t=(await s.filesDownload({path:a+e})).result.fileBlob,i=await t.text();return JSON.parse(i)},l=async()=>{const a=await application.getNowPlayingTracks();await n(e,a),application.postUiMessage({type:"message",message:"Successfully saved Now playing tracks."})};application.onUiMessage=async a=>{switch(a.type){case"login":let o=a.accessToken,p=a.refreshToken;localStorage.setItem("access_token",o),localStorage.setItem("refresh_token",p),i(o,p);break;case"check-login":const g=localStorage.getItem("access_token");g&&await application.postUiMessage({type:"login",accessToken:g}),await(async()=>{const a=document.location.host.split(".");a.shift();const e=a.join("."),s=`${document.location.protocol}//${e}`,t=await application.getPluginId();application.postUiMessage({type:"origin",origin:s,pluginId:t})})();break;case"save":await l();break;case"load":await(async()=>{const a=await c(e);await application.setNowPlayingTracks(a),application.postUiMessage({type:"message",message:"Successfully loaded Now playing tracks."})})();break;case"save-plugins":await(async()=>{const a=await application.getPlugins();await n(s,a),application.postUiMessage({type:"message",message:"Successfully saved plugins."})})();break;case"load-plugins":await(async()=>{const a=await c(s);application.installPlugins(a)})();break;case"save-playlists":await(async()=>{const a=await application.getPlaylists();await n(t,a),application.postUiMessage({type:"message",message:"Successfully saved playlists."})})();break;case"load-playlists":await(async()=>{const a=await c(t);await application.addPlaylists(a),application.postUiMessage({type:"message",message:"Successfully added playlists."})})();break;case"logout":localStorage.removeItem("access_token"),localStorage.removeItem("refresh_token")}},application.onDeepLinkMessage=async a=>{console.log(a),application.postUiMessage({type:"deeplink",url:a})};(async()=>{await new Promise(((a,e)=>{const s=document.createElement("script");s.src="https://unpkg.com/dropbox/dist/Dropbox-sdk.min.js",s.type="text/javascript",document.getElementsByTagName("head")[0].appendChild(s),s.onload=()=>{a()},s.onerror=()=>{e()}})),o=new Dropbox.DropboxAuth({clientId:"dz4gaw4bayoft8a"});let a=localStorage.getItem("access_token"),e=localStorage.getItem("refresh_token");a&&e&&i(a,e)})()})();